{"ast":null,"code":"var _jsxFileName = \"/Users/pranjal/Desktop/security/security-project/src/ExecuteCommand.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExecuteCommand() {\n  _s();\n  const [command, setCommand] = useState('');\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [eventSource, setEventSource] = useState(null); // State to store EventSource instance\n\n  const handleExecute = () => {\n    // Reset output and error when executing a new command\n    setOutput('');\n    setError('');\n\n    // Fetch JWT token from localStorage\n    const token = localStorage.getItem('token');\n\n    // Establish SSE connection with the Authorization header\n    const newEventSource = new EventSource(`http://170.187.237.161:3001/execute-command?command=${encodeURIComponent(command)}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    newEventSource.onmessage = event => {\n      setOutput(prevOutput => prevOutput + event.data); // Append new output to previous output\n    };\n    newEventSource.onerror = error => {\n      setError('Error streaming output');\n      console.error('Error streaming output:', error);\n    };\n\n    // Close previous EventSource connection if exists\n    if (eventSource) {\n      eventSource.close();\n    }\n\n    // Store the new EventSource instance in state\n    setEventSource(newEventSource);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Execute Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Command:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: command,\n        onChange: e => setCommand(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExecute,\n      children: \"Execute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ExecuteCommand, \"0tCDoDvW4pasVfnwAc0+S1bl8zM=\");\n_c = ExecuteCommand;\nexport default ExecuteCommand;\nvar _c;\n$RefreshReg$(_c, \"ExecuteCommand\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExecuteCommand","_s","command","setCommand","output","setOutput","error","setError","eventSource","setEventSource","handleExecute","token","localStorage","getItem","newEventSource","EventSource","encodeURIComponent","headers","Authorization","onmessage","event","prevOutput","data","onerror","console","close","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/pranjal/Desktop/security/security-project/src/ExecuteCommand.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ExecuteCommand() {\n  const [command, setCommand] = useState('');\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [eventSource, setEventSource] = useState(null); // State to store EventSource instance\n\n  const handleExecute = () => {\n    // Reset output and error when executing a new command\n    setOutput('');\n    setError('');\n\n    // Fetch JWT token from localStorage\n    const token = localStorage.getItem('token');\n\n    // Establish SSE connection with the Authorization header\n    const newEventSource = new EventSource(`http://170.187.237.161:3001/execute-command?command=${encodeURIComponent(command)}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    newEventSource.onmessage = (event) => {\n      setOutput(prevOutput => prevOutput + event.data); // Append new output to previous output\n    };\n\n    newEventSource.onerror = (error) => {\n      setError('Error streaming output');\n      console.error('Error streaming output:', error);\n    };\n\n    // Close previous EventSource connection if exists\n    if (eventSource) {\n      eventSource.close();\n    }\n\n    // Store the new EventSource instance in state\n    setEventSource(newEventSource);\n  };\n\n  return (\n    <div>\n      <h2>Execute Command</h2>\n      <div>\n        <label>Command:</label>\n        <input type=\"text\" value={command} onChange={(e) => setCommand(e.target.value)} />\n      </div>\n      <button onClick={handleExecute}>Execute</button>\n      {output && <div><pre>{output}</pre></div>}\n      {error && <div>Error: {error}</div>}\n    </div>\n  );\n}\n\nexport default ExecuteCommand;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}